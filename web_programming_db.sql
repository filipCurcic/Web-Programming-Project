-- MySQL Script generated by MySQL Workbench
-- Wed Jan 17 19:07:57 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema web_programming_new_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema web_programming_new_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `web_programming_new_db` DEFAULT CHARACTER SET utf8 ;
USE `web_programming_new_db` ;

-- -----------------------------------------------------
-- Table `web_programming_new_db`.`movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`movie` (
  `idmovie` INT NOT NULL AUTO_INCREMENT,
  `title` TEXT NULL,
  `desc` TEXT NULL,
  `runtime` INT NULL,
  `release` DATE NULL,
  `poster_path` TEXT NULL,
  `vote_count` INT NULL,
  `votes` DOUBLE NULL,
  PRIMARY KEY (`idmovie`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`genre` (
  `idgenre` INT NOT NULL AUTO_INCREMENT,
  `genre_name` VARCHAR(100) NULL,
  PRIMARY KEY (`idgenre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`movie_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`movie_genre` (
  `idmovie_genre` INT NOT NULL AUTO_INCREMENT,
  `genre_idgenre` INT NOT NULL,
  `movie_idmovie` INT NOT NULL,
  PRIMARY KEY (`idmovie_genre`),
  INDEX `fk_movie_genre_genre_idx` (`genre_idgenre` ASC),
  INDEX `fk_movie_genre_movie1_idx` (`movie_idmovie` ASC),
  CONSTRAINT `fk_movie_genre_genre`
    FOREIGN KEY (`genre_idgenre`)
    REFERENCES `web_programming_new_db`.`genre` (`idgenre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_genre_movie1`
    FOREIGN KEY (`movie_idmovie`)
    REFERENCES `web_programming_new_db`.`movie` (`idmovie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`person` (
  `idperson` INT NOT NULL AUTO_INCREMENT,
  `first_name` TEXT NULL,
  `last_name` TEXT NULL,
  `gender` ENUM('M', 'F') NULL,
  `date_of_birth` DATE NULL,
  PRIMARY KEY (`idperson`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`movie_person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`movie_person` (
  `idmovie_person` INT NOT NULL AUTO_INCREMENT,
  `role_name` ENUM('ACTOR', 'DIRECTOR') NULL,
  `movie_idmovie` INT NOT NULL,
  `person_idperson` INT NOT NULL,
  PRIMARY KEY (`idmovie_person`),
  INDEX `fk_movie_person_movie1_idx` (`movie_idmovie` ASC),
  INDEX `fk_movie_person_person1_idx` (`person_idperson` ASC),
  CONSTRAINT `fk_movie_person_movie1`
    FOREIGN KEY (`movie_idmovie`)
    REFERENCES `web_programming_new_db`.`movie` (`idmovie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_person_person1`
    FOREIGN KEY (`person_idperson`)
    REFERENCES `web_programming_new_db`.`person` (`idperson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NULL,
  `password` VARCHAR(100) NULL,
  `email` VARCHAR(100) NULL,
  `person_idperson` INT NOT NULL,
  `user_type` ENUM('User', 'Admin') NULL,
  PRIMARY KEY (`iduser`),
  INDEX `fk_user_person1_idx` (`person_idperson` ASC),
  CONSTRAINT `fk_user_person1`
    FOREIGN KEY (`person_idperson`)
    REFERENCES `web_programming_new_db`.`person` (`idperson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`watchlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`watchlist` (
  `movie_idmovie` INT NOT NULL,
  `date_added` DATE NULL,
  `user_iduser` INT NOT NULL,
  PRIMARY KEY (`movie_idmovie`, `user_iduser`),
  INDEX `fk_user_has_movie_movie1_idx` (`movie_idmovie` ASC),
  INDEX `fk_watchlist_user1_idx` (`user_iduser` ASC),
  CONSTRAINT `fk_user_has_movie_movie1`
    FOREIGN KEY (`movie_idmovie`)
    REFERENCES `web_programming_new_db`.`movie` (`idmovie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_watchlist_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `web_programming_new_db`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`user_ratings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`user_ratings` (
  `iduser_ratings` INT NOT NULL AUTO_INCREMENT,
  `rating` DOUBLE NULL,
  `movie_idmovie` INT NOT NULL,
  `user_iduser` INT NOT NULL,
  PRIMARY KEY (`iduser_ratings`, `movie_idmovie`, `user_iduser`),
  INDEX `fk_user_ratings_movie1_idx` (`movie_idmovie` ASC),
  INDEX `fk_user_ratings_user1_idx` (`user_iduser` ASC),
  CONSTRAINT `fk_user_ratings_movie1`
    FOREIGN KEY (`movie_idmovie`)
    REFERENCES `web_programming_new_db`.`movie` (`idmovie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_ratings_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `web_programming_new_db`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`user_reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`user_reviews` (
  `iduser_reviews` INT NOT NULL AUTO_INCREMENT,
  `review` VARCHAR(500) NULL,
  `movie_idmovie` INT NOT NULL,
  `user_iduser` INT NOT NULL,
  `recommendation` ENUM('YES', 'NO') NULL,
  PRIMARY KEY (`iduser_reviews`, `movie_idmovie`, `user_iduser`),
  INDEX `fk_user_reviews_movie1_idx` (`movie_idmovie` ASC),
  INDEX `fk_user_reviews_user1_idx` (`user_iduser` ASC),
  CONSTRAINT `fk_user_reviews_movie1`
    FOREIGN KEY (`movie_idmovie`)
    REFERENCES `web_programming_new_db`.`movie` (`idmovie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_reviews_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `web_programming_new_db`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `web_programming_new_db`.`authentication`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_programming_new_db`.`authentication` (
  `user_iduser` INT NOT NULL,
  `token` TEXT NULL,
  PRIMARY KEY (`user_iduser`),
  CONSTRAINT `fk_authentication_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `web_programming_new_db`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
